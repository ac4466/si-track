{"version":3,"sources":["App.tsx","index.tsx"],"names":["generatePopupSx","isTop","Math","random","isLeft","x","y","top","undefined","bottom","left","right","App","useState","popups","setPopups","Container","maxWidth","AppBar","position","Toolbar","sx","justifyContent","Typography","variant","Button","color","mt","onClick","Box","width","height","map","index","align","ReactDOM","render","document","getElementById"],"mappings":"sNAWMA,EAAkB,WACtB,IAAMC,EAAQC,KAAKC,SAAW,GACxBC,EAASF,KAAKC,SAAW,GAEzBE,EAAC,UAAsB,IAAhBH,KAAKC,SAAX,MACDG,EAAC,UAAsB,IAAhBJ,KAAKC,SAAX,MAEP,MAAO,CACLI,IAAKN,EAAQK,OAAIE,EACjBC,OAAQR,OAAQO,EAAYF,EAC5BI,KAAMN,EAASC,OAAIG,EACnBG,MAAOP,OAASI,EAAYH,IAsDjBO,EAlDO,WAAO,IAAD,EACEC,mBAAyB,IAD3B,mBACnBC,EADmB,KACXC,EADW,KAO1B,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,eAAgB,UAFpB,SAKE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,uCAGJ,cAACC,EAAA,EAAD,CACED,QAAQ,YACRE,MAAM,UACNL,GAAI,CACFM,GAAI,QAENC,QArBW,WACfb,EAAU,GAAD,mBAAKD,GAAL,CAAad,QAcpB,oCAWA,cAAC6B,EAAA,EAAD,CAAKV,SAAS,WAAWW,MAAM,OAAOC,OAAO,QAA7C,SACGjB,EAAOkB,KAAI,SAACX,EAAIY,GAAL,OACV,cAACV,EAAA,EAAD,CAEEJ,SAAS,WACTK,QAAQ,KACRU,MAAM,SACNb,GAAIA,EALN,yBACOY,QAWX,cAACV,EAAA,EAAD,CAAYI,GAAG,OAAOH,QAAQ,KAAKU,MAAM,SAAzC,sCCjENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.63f25f94.chunk.js","sourcesContent":["import { AppBar, Box, Container, Toolbar, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { useState } from \"react\";\n\ntype PopupSx = {\n  top?: string;\n  bottom?: string;\n  left?: string;\n  right?: string;\n};\n\nconst generatePopupSx = (): PopupSx => {\n  const isTop = Math.random() > 0.5;\n  const isLeft = Math.random() > 0.5;\n\n  const x = `${Math.random() * 450}px`;\n  const y = `${Math.random() * 290}px`;\n\n  return {\n    top: isTop ? y : undefined,\n    bottom: isTop ? undefined : y,\n    left: isLeft ? x : undefined,\n    right: isLeft ? undefined : x,\n  };\n};\n\nconst App: React.FC = () => {\n  const [popups, setPopups] = useState<Array<PopupSx>>([]);\n\n  const addPopup = () => {\n    setPopups([...popups, generatePopupSx()]);\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <AppBar position=\"static\">\n        <Toolbar\n          sx={{\n            justifyContent: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\">주현아...</Typography>\n        </Toolbar>\n      </AppBar>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{\n          mt: \"15px\",\n        }}\n        onClick={addPopup}\n      >\n        Click me! ♥️\n      </Button>\n\n      <Box position=\"relative\" width=\"100%\" height=\"600px\">\n        {popups.map((sx, index) => (\n          <Typography\n            key={index}\n            position=\"absolute\"\n            variant=\"h5\"\n            align=\"center\"\n            sx={sx}\n          >\n            너무\n          </Typography>\n        ))}\n      </Box>\n\n      <Typography mt=\"10px\" variant=\"h4\" align=\"center\">\n        사랑해~~\n      </Typography>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}